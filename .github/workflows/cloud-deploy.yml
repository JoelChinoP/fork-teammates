# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy

on:
  push:
    branches:
      - deploy
    paths:
      - ".github/workflows/cloud-deploy.yml"
      - ".github/workflows/build-backend.yml"
      - ".github/workflows/build-frontend.yml"
      - ".github/workflows/build-dependencies.yml"

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-backend:
    uses: ./.github/workflows/build-backend.yml

  build-frontend:
    uses: ./.github/workflows/build-frontend.yml

  build-dependencies:
    uses: ./.github/workflows/build-dependencies.yml

  deploy-dependencies:
    runs-on: ubuntu-latest
    environment: google-vps
    needs: build-dependencies

    steps:
      - name: Restore datastore image tar
        uses: actions/cache@v4
        with:
          path: datastore-image.tar
          key: datastore-image-${{ github.sha }}
      - run: echo "Loading datastore image"

      - name: Restore solr image tar
        uses: actions/cache@v4
        with:
          path: solr-image.tar
          key: solr-image-${{ github.sha }}
      - run: echo "Loading solr image"

      - name: Create file private key
        run: |
          echo "${{ secrets.VPS_KEY }}" > dev_key
          chmod 600 dev_key

      - name: Connect to VPS
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          ssh -v -o StrictHostKeyChecking=no -i dev_key ${VPS_USER}@${VPS_HOST}
          echo "Connected to VPS"

  deploy-backend:
    runs-on: ubuntu-latest
    needs: [build-backend, deploy-dependencies]

    steps:
      - name: Restore backend image tar
        uses: actions/cache@v4
        with:
          path: backend-image.tar
          key: backend-image-${{ github.sha }}

      - run: echo "Loading backend image"

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [build-frontend]

    steps:
      - name: Restore frontend image tar
        uses: actions/cache@v4
        with:
          path: frontend-image.tar
          key: frontend-image-${{ github.sha }}

      - run: echo "Loading frontend image"
