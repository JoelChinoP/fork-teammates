# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy

on:
  pull_request:
    types: [closed]
    branches: [deploy]

permissions:
  contents: read

jobs:
  generate-types:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate types
        run: ./gradlew generateTypes

      - name: Upload generated types
        uses: actions/upload-artifact@v4
        with:
          name: generated-types
          path: |
            frontend/src/types/
            frontend/src/app/shared/models/

  build-frontend:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: generate-types
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download generated types
        uses: actions/download-artifact@v4
        with:
          name: generated-types
          path: ./

      - name: Setup Node.js with caching
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install dependencies
        working-directory: frontend
        run: npm ci --no-fund --no-audit --legacy-peer-deps

      - name: Build Angular application
        working-directory: frontend
        run: npm run build

      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/

  build-backend:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 17 with Maven caching
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          cache-dependency-path: 'backend/pom.xml'

      - name: Build Spring Boot application
        working-directory: backend
        run: mvn clean package -DskipTests

      - name: Upload backend build
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/*.jar